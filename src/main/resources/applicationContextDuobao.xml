<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx.xsd">

	<context:property-placeholder location="classpath:jdbc.properties" />
	<bean id="dataSourceDuobao" class="org.apache.tomcat.jdbc.pool.DataSource"
		destroy-method="close">
		<property name="driverClassName">
			<value>${jdbc.driverClass}</value>
		</property>
		<property name="url">
			<value>${jdbc.url.duobao}</value>
		</property>
		<property name="username">
			<value>${jdbc.userName}</value>
		</property>
		<property name="password">
			<value>${jdbc.password}</value>
		</property>
		<property name="validationQuery" value="SELECT 1" />
		<property name="testOnBorrow" value="true" />
	</bean>

	<!-- 配置事物 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSourceDuobao" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- <tx:advice id="txAdvice" transaction-manager="transactionManager"> 
		<tx:attributes> <tx:method name="delete*" propagation="REQUIRED" /> <tx:method 
		name="delete" propagation="REQUIRED" /> <tx:method name="insert*" propagation="REQUIRED" 
		/> <tx:method name="insert" propagation="REQUIRED" /> <tx:method name="add*" 
		propagation="REQUIRED" /> <tx:method name="add" propagation="REQUIRED" /> 
		<tx:method name="update*" propagation="REQUIRED" /> <tx:method name="update" 
		propagation="REQUIRED" /> <tx:method name="edit" propagation="REQUIRED" /> 
		<tx:method name="edit*" propagation="REQUIRED" /> <tx:method name="save*" 
		propagation="REQUIRED" /> <tx:method name="save" propagation="REQUIRED" /> 
		<tx:method name="batch*" propagation="REQUIRED" /> <tx:method name="create*" 
		propagation="REQUIRED" /> <tx:method name="find*" propagation="SUPPORTS" 
		read-only="true" /> <tx:method name="check*" propagation="SUPPORTS" read-only="true" 
		/> <tx:method name="get*" propagation="SUPPORTS" read-only="true" /> <tx:method 
		name="set*" propagation="SUPPORTS" read-only="true" /> <tx:method name="select*" 
		propagation="SUPPORTS" read-only="true" /> <tx:method name="query*" propagation="SUPPORTS" 
		read-only="true" /> <tx:method name="execute*" propagation="SUPPORTS" read-only="true" 
		/> <tx:method name="*" /> </tx:attributes> </tx:advice> <aop:config> <aop:pointcut 
		id="pc" expression="execution( * com.bianxianmao.duobaomanage.service.*.*(..))" 
		/> 把事务控制在Service层 <aop:advisor pointcut-ref="pc" advice-ref="txAdvice" /> 
		</aop:config> <aop:aspectj-autoproxy /> <tx:annotation-driven /> -->


	<!-- 配置mybatis -->
	<bean id="sqlSessionFactoryDuobao" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSourceDuobao" />
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<property name="mapperLocations"
			value="classpath:com/bianxianmao/duobaomanage/dao/duobao/sql/**/*.xml"></property>
	</bean> 

	<bean id="sqlSessionTemplateDuobao" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactoryDuobao" />
		<!--更新采用单个模式 -->
		<constructor-arg index="1" value="SIMPLE" />
	</bean>
	<!-- 采用自动扫描方式创建mapper bean(单个更新模式) -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.bianxianmao.duobaomanage.dao.duobao.mapper" />
		<property name="sqlSessionTemplateBeanName" value="sqlSessionTemplateDuobao" />
	</bean>
	<context:annotation-config />

	<!-- 扫描的包:排除Controller，交给springMvc处理 -->
	<context:component-scan base-package="com.bianxianmao.duobaomanage">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 配置文件 -->
	<bean id="configProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath:/config.properties</value>
			</list>
		</property>
	</bean>
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
		<property name="properties" ref="configProperties" />
	</bean>
</beans>
